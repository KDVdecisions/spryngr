source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
outline[13,]
outline[[13,]]
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
outline <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/outline.xlsx", sheetIndex = 1)
discrete <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/discreteData.xlsx", sheetIndex = 2)$SET
continuous <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/continuousData.xlsx", sheetIndex = 1)$L
formatDiscrete(discrete, outline[13,], "YlOrRd")
outline$LEVELS <- str_split(outline$LEVELS, ", ") %>%
unlist() %>%
trimws("both")
outline[13,]$LEVELS <- str_split(outline[13,]$LEVELS, ", ") %>%
unlist() %>%
trimws("both")
outline$LEVELS <- sapply(outline$LEVELS, function(x){
str_split(x, ", ") %>%
unlist() %>%
trimws(which = "both")
})
outline$LEVELS
formatDiscrete(discrete, outline[13,], "YlOrRd")
discrete <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/discreteData.xlsx", sheetIndex = 2)$SET %>%
formatDiscrete(outline[13,], "YlOrRd")
continuous <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/continuousData.xlsx", sheetIndex = 1)$L
outline <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/outline.xlsx", sheetIndex = 1)
outline$LEVELS <- sapply(outline$LEVELS, function(x){
str_split(x, ", ") %>%
unlist() %>%
trimws(which = "both")
})
discrete <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/discreteData.xlsx", sheetIndex = 2)$SET %>%
formatDiscrete(outline[13,], "YlOrRd")
continuous <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/continuousData.xlsx", sheetIndex = 1)$L
thisDat <- data.frame(continuous, discrete)
View(violinPlot)
violinPlot(thisDat$continuous, thisDat$SET)
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
colorRampPalette(brewer.pal(8, "YlOrRd"))(9)
myPlot + scale_fill_manual(values = c( "#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B", "#FD9F44", "#FC7535", "#F54026", "#DC161D", "#B10026"))
myPlot + scale_fill_manual(values = c( "#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B",
"#FD9F44", "#FC7535", "#F54026", "#DC161D",
"#B10026")) +
scale_fill_discrete(breaks = levels(thisDat$SET))
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = c( "#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B",
"#FD9F44", "#FC7535", "#F54026", "#DC161D",
"#B10026"),breaks = levels(thisDat$SET))
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_discrete(breaks = levels(thisDat$SET))
thisDat$SET
myPlot + scale_fill_discrete(breaks = levels(thisDat$SET))
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_discrete(breaks = levels(thisDat$SET))
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(breaks = levels(thisDat$SET))
fills <- c("#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B",
"#FD9F44", "#FC7535", "#F54026", "#DC161D",
"#B10026")
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
myPlot + scale_fill_manual(values = fills, breaks = thisDat$SET)
thisDat$SET
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = fills)
outline <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/outline.xlsx", sheetIndex = 1)
outline$LEVELS <- sapply(outline$LEVELS, function(x){
str_split(x, ", ") %>%
unlist() %>%
trimws(which = "both")
})
discrete <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/discreteData.xlsx", sheetIndex = 2)$SET %>%
formatDiscrete(outline[13,], "YlOrRd")
continuous <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/continuousData.xlsx", sheetIndex = 1)$L
thisDat <- data.frame(continuous, discrete)
thisDat$SET
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot
myPlot + scale_fill_manual(values = fills, breaks = levels(discrete$SET))
thisDat
table(thisDat$SET)
thisDat <- data.frame(continuous, discrete) %>%
filter(SET != "Human Resources")
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot
myPlot + scale_fill_manual(values = fills, breaks = levels(discrete$SET))
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
outline <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/outline.xlsx", sheetIndex = 1)
outline$LEVELS <- sapply(outline$LEVELS, function(x){
str_split(x, ", ") %>%
unlist() %>%
trimws(which = "both")
})
discrete <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/discreteData.xlsx", sheetIndex = 2)$SET %>%
formatDiscrete(outline[13,], "YlOrRd")
continuous <- read.xlsx(file = "./employee_experiences_12Nov2019_output/Data/continuousData.xlsx", sheetIndex = 1)$L
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
thisDat <- data.frame(continuous, discrete) #%>%
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
fills <- c("#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B",
"#FD9F44", "#FC7535", "#F54026", "#DC161D",
"#B10026")
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
thisDat <- data.frame(continuous, discrete) %>%
filter(SET != "Human Resources")
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
thisDat <- data.frame(continuous, discrete) #%>%
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
fills <- c("#FFFFCC", "#FFEFA5", "#FEDE80", "#FEC05B",
"#FD9F44", "blue", "#F54026", "#DC161D",
"#B10026")
thisDat <- data.frame(continuous, discrete) #%>%
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
thisDat <- data.frame(continuous, discrete) %>%
filter(SET != "Human Resources")
myPlot <- violinPlot(thisDat$continuous, thisDat$SET)
myPlot + scale_fill_manual(values = fills, breaks = levels(thisDat$SET))
levels(thisDat$SET)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
levels(thisDat$SET)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
?brewer.pal
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[1]]
heyNow[[2]]
heyNow[[3]]
heyNow[[10]]
heyNow[[13]]
heyNow[[1]]
heyNow[[15]]
heyNow[[20]]
heyNow[[23]]
heyNow[[25]]
heyNow[[1]]
heyNow[[23]]
heyNow[[1]]
heyNow[[25]]
heyNow[[49]]
heyNow[[13]]
heyNow[[7]]
heyNow[[31]]
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
library(dplyr)
library(stringr)
library(ggplot2)
library(xlsx)
library(RColorBrewer)
library(ggplot2)
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[1]]
heyNow[[25]]
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[1]]
heyNow[[14]]
heyNow[[13]]
heyNow[[7]]
heyNow[[8]]
heyNow[[6]]
heyNow[[7]]
heyNow[[8]]
heyNow[[9]]
heyNow[[10]]
heyNow[[11]]
heyNow[[10]]
heyNow[[9]]
heyNow[[100]]
heyNow[[15]]
heyNow[[115]]
heyNow[[1:40]]
heyNow[[1]]
heyNow[[2]]
heyNow[[3]]
heyNow[[4]]
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
#add set column containing all selected levels per observation
thisQData <- addNaField(thisQData) %>%
replace(is.na(.), 0)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
parseCollection("Data/libraryTestResponses.csv")
libPlots <- plotAllViolin("libraryTestResponses_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "set1")
libPlots <- plotAllViolin("libraryTestResponses_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
libPlots[[1]]
libPlots[[2]]
libPlots
warnings()
heyNow[[80]]
libPlots[[80]]
libPlots[[79]]
libPlots[[78]]
libPlots[[73]]
libPlots <- plotAllViolin("libraryTestResponses_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
libPlots[[80]]
libPlots[[1]]
libPlots[[2]]
libPlots[[3]]
libPlots[[4]]
libPlots[[5]]
libPlots[[6]]
libPlots[[7]]
libPlots[[10]]
libPlots[[11]]
libPlots[[12]]
libPlots[[13]]
libPlots[[14]]
libPlots[[15]]
libPlots[[16]]
libPlots[[1]]
LibPlots[[15]]
libPlots[[15]]
libPlots[[16]]
libPlots[[15]]
libPlots[[16]]
libPlots[[17]]
libPlots[[15]]
libPlots[[1]]
libPlots[[15]]
libPlots[[14]]
libPlots[[13]]
libPlots[[12]]
libPlots[[11]]
libPlots[[4]]
libPlots[[20]]
libPlots[[80]]
length(libPlots)
libPlots[[70]]
libPlots[[60]]
libPlots[[60]]
libPlots[[59]]
libPlots[[58]]
libPlots[[57]]
libPlots[[56]]
libPlots[[57]]
libPlots[[58]]
libPlots[[59]]
libPlots[[60]]
libPlots[[61]]
libPlots[[62]]
libPlots[[63]]
libPlots[[64]]
libPlots[[65]]
libPlots[[66]]
libPlots[[67]]
libPlots[[66]]
libPlots[[57]]
libPlots[[56]]
libPlots[[567]]
libPlots[[57]]
libPlots[[57]]
libPlots[[67]]
libPlots[[66]]
libPlots[[63]]
libPlots[[62]]
libPlots[[56]]
libPlots[[57]]
libPlots[[57]]
heyNow <- plotAllViolin("employee_experiences_12Nov2019_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[1]]
HeyNow[[15]]
heyNow[[15]]
#library(spryngr)
#outline_readIn <- parseCollection("Data/employee_experiences_12Nov2019.csv", outline = "./outline.xlsx")
outline_build <- parseCollection("Data/Modified/employee_experiences_12Nov2019_modified.csv")
heyNow <- plotAllViolin("employee_experiences_12Nov2019_modified_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[7]]
heyNow[[8]]
heyNow[[49]]
heyNow[[39]]
heyNow[[31]]
heyNow[[7]]
heyNow[[54]]
heyNow[[45]]
heyNow[[59]]
heyNow[[65]]
heyNow[[63]]
heyNow[[67]]
heyNow[[70]]
heyNow[[73]]
heyNow[[76]]
heyNow[[78]]
heyNow[[81]]
heyNow[[23]]
heyNow[[81]]
heyNow[[7]]
heyNow[[31]]
?xlsx
library(dplyr)
library(stringr)
library(ggplot2)
library(xlsx)
library(RColorBrewer)
library(ggplot2)
?xlsx::read.xlsx()
setwd("C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/scratch")
rawDat <- read.xlsx("Data/Modified/employee_experiences_12Nov2019_modified.csv")
rawDat <- read.xlsx("Data/Modified/employee_experiences_12Nov2019_modified.csv", sheetIndex=1)
#library(spryngr)
#outline_readIn <- parseCollection("Data/employee_experiences_12Nov2019.csv", outline = "./outline.xlsx")
outline_build <- parseCollection("Data/Modified/employee_experiences_12Nov2019_modified.csv")
rawDat <- read.xlsx("Data/Modified/employee_experiences_12Nov2019_modified.csv", sheetIndex=1)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Laurie/PeaceBabies/peaceBabies_Violin.R', echo=TRUE)
#library(spryngr)
#outline_readIn <- parseCollection("Data/employee_experiences_12Nov2019.csv", outline = "./outline.xlsx")
outline_build <- parseCollection("Data/Modified/employee_experiences_12Nov2019_modified.csv")
rawDat <- read.xlsx("Data/Modified/employee_experiences_12Nov2019_modified.csv", sheetIndex=1)
rawDat <- read.xlsx("Data/Modified/employee_experiences_12Nov2019_modified.csv", sheetIndex=1)
rawDat <- read.csv("Data/Modified/employee_experiences_12Nov2019_modified.csv")
rawDat
rawDat <- read.csv("Data/Modified/employee_experiences_12Nov2019_modified.csv", check.names = FALSE)
rawDat
library(dplyr)
rawDat[1,]
rawDat[1,] == NA
is.na(rawDat[1,])
names(rawDat)
?read.csv
?read.csv
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R')
?read.csv
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R')
library(dplyr)
library(stringr)
library(ggplot2)
library(xlsx)
library(RColorBrewer)
library(ggplot2)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Laurie/PeaceBabies/peaceBabies_Violin.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/scratch/spryngr_scratch.R', echo=TRUE)
library(dplyr)
library(stringr)
library(ggplot2)
library(xlsx)
library(RColorBrewer)
library(ggplot2)
setwd("C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/scratch")
parseCollection("Data/employee_experiences_12Nov2019.csv")
parseCollection("Data/Modified/employee_experiences_12Nov2019_modified.csv")
parseCollection("Data/Modified/employee_experiences_12Nov2019_modified.csv")
parseCollection("Data/libraryTestResponses.csv")
parseCollection("Data/employee_experiences_12Nov2019.csv")
heyNow <- plotAllViolin("employee_experiences_12Nov2019_modified_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
setwd("C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/scratch")
heyNow <- plotAllViolin("employee_experiences_12Nov2019_modified_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow <- plotAllViolin("employee_experiences_12Nov2019_modified_output", flatten = TRUE,
writePlots = FALSE, setOutputLocation = FALSE, palette = "Set1")
heyNow[[1]]
heyNow[[2]]
heyNow[[3]]
heyNow[[4]]
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Laurie/PeaceBabies/peaceBabies_Violin.R', echo=TRUE)
library(dplyr)
library(stringr)
library(ggplot2)
library(xlsx)
library(RColorBrewer)
library(ggplot2)
setwd("C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Presentation")
setwd("C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Presentation")
parseCollection("Data/employee_experiences.csv")
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R')
plotAllViolin("employee_experiences_output", palette = "RdYlBl")
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "RdYlBl")
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "RdYlBu")
myViolinPlots
length(myViolinPlots)
myViolinPlots[[1]]
discreteData <- read.xlsx("employee_experiences_output/Data/discreteData.xlsx", sheetIndex = 4)
discreteData
discreteData <- read.xlsx("employee_experiences_output/Data/discreteData.xlsx", sheetIndex = 2)
discreteData
continuousData <- read.xlsx("employee_experiences_output/Data/continuousData.xlsx", sheetIndex = 2)
continuousData
violinPlot(continuousData$T, discreteData$SET)
colorRampPalette(brewer.pal(8, "RdYlBu"))(9)
View(violinPlot)
violinPlot(continuousData$T, discreteData$SET,
fill = c("#D73027", "#F0653F", "#FA9D59", "#FDCD7E", "#EFE9C4", "#CCE9F2", "#9DCDE3", "#6EA5CD", "#4575B4"),
title = "This experience illustrates that we work here...",
xlab = "-To get paid <---> +To get paid")
violinPlot(continuousData$T, discreteData$SET,
fill = c("#D73027", "#F0653F", "#FA9D59", "#FDCD7E", "#EFE9C4", "#CCE9F2", "#9DCDE3", "#6EA5CD", "#4575B4"),
title = "This experience illustrates that we work here...",
xlab = "-to get paid <-------> +to get paid",
ylab = "What type of position do you have in this organization?")
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "RdYlBu")
myViolinPlots[[1]]
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "RdYlBu")
myViolinPlots[[1]]
myViolinPlots[[2]]
myViolinPlots[[4]]
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "RdYlBu", writePlots = TRUE)
display.brewer.all(colorblindFriendly = TRUE)
#parse collection and plotAllViolins
parseCollection("Data/employee_experiences.csv")
#parse collection and plotAllViolins
parseCollection("Data/employee_experiences.csv")
#parse collection and plotAllViolins
parseCollection("Data/employee_experiences.csv")
myViolinPlots <- plotAllViolin("employee_experiences_output", writePlots = TRUE)
myViolinPlots <- plotAllViolin("employee_experiences_output")
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/scratch/spryngr_scratch.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/parseCollection.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getViolinPlots.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildContinuous.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildOutline.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/classifyQuestions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/getUserInput.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/helperFunctions.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/writeCollectionData.R', echo=TRUE)
source('C:/Users/Eliot/Desktop/Documents/KDV_Decisions/P_Spryng_Data/Code/spryngr/R/buildDiscrete.R', echo=TRUE)
#parse collection and plotAllViolins
parseCollection("Data/employee_experiences.csv")
#parse collection and plotAllViolins
parseCollection("Data/employee_experiences.csv")
myViolinPlots <- plotAllViolin("employee_experiences_output")
display.brewer.all(colorblindFriendly = TRUE)
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "Set2")
myViolinPlots <- plotAllViolin("employee_experiences_output", palette = "Set2", writePlots = TRUE)
#single plot function still under development:
discreteData <- read.xlsx("employee_experiences_output/Data/discreteData.xlsx", sheetIndex = 2)
continuousData <- read.xlsx("employee_experiences_output/Data/continuousData.xlsx", sheetIndex = 2)
violinPlot(continuousData$T, discreteData$SET,
fill = c("#D73027", "#F0653F", "#FA9D59", "#FDCD7E", "#EFE9C4", "#CCE9F2", "#9DCDE3", "#6EA5CD", "#4575B4"),
title = "This experience illustrates that we work here...",
xlab = "-to get paid <-------> +to get paid",
ylab = "What type of position do you have in this organization?")
